# Generated by Django 5.1 on 2025-10-28 01:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0030_produit_details_produit_emplacement'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text="Numéro unique de l'inventaire", max_length=50, unique=True)),
                ('nom', models.CharField(help_text="Nom/Description de l'inventaire", max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description détaillée')),
                ('date_debut', models.DateTimeField(help_text='Date de début prévue')),
                ('date_fin_prevue', models.DateTimeField(help_text='Date de fin prévue')),
                ('date_fin_reelle', models.DateTimeField(blank=True, help_text='Date de fin réelle', null=True)),
                ('statut', models.CharField(choices=[('planifie', 'Planifié'), ('en_cours', 'En cours'), ('termine', 'Terminé'), ('annule', 'Annulé')], default='planifie', max_length=20)),
                ('total_produits', models.IntegerField(default=0, help_text='Nombre total de produits à inventorier')),
                ('produits_comptes', models.IntegerField(default=0, help_text='Nombre de produits déjà comptés')),
                ('ecarts_trouves', models.IntegerField(default=0, help_text="Nombre d'écarts trouvés")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventaires_crees', to=settings.AUTH_USER_MODEL)),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventaires', to='core.boutique')),
                ('entreprise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventaires', to='core.entreprise')),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventaires', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventaire',
                'verbose_name_plural': 'Inventaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventaireProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_theorique', models.IntegerField(help_text='Quantité théorique enregistrée dans le système')),
                ('quantite_reelle', models.IntegerField(blank=True, help_text='Quantité réellement comptée', null=True)),
                ('ecart', models.IntegerField(default=0, help_text='Différence entre théorique et réel (réel - théorique)')),
                ('commentaire', models.TextField(blank=True, help_text="Commentaire sur l'écart si nécessaire")),
                ('date_comptage', models.DateTimeField(blank=True, help_text='Date et heure du comptage', null=True)),
                ('est_compte', models.BooleanField(default=False, help_text='Indique si ce produit a été compté')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('compteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produits_comptes', to=settings.AUTH_USER_MODEL)),
                ('inventaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='core.inventaire')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventaires', to='core.produit')),
            ],
            options={
                'verbose_name': "Produit d'inventaire",
                'verbose_name_plural': "Produits d'inventaire",
            },
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['entreprise'], name='core_invent_entrepr_fd9531_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['entrepot'], name='core_invent_entrepo_9b50a6_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['statut'], name='core_invent_statut_b13ad1_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['date_debut'], name='core_invent_date_de_6c854a_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['statut', 'date_debut'], name='core_invent_statut_2d7d59_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaire',
            index=models.Index(fields=['entrepot', 'statut'], name='core_invent_entrepo_0ac346_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaireproduit',
            index=models.Index(fields=['inventaire'], name='core_invent_inventa_78730d_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaireproduit',
            index=models.Index(fields=['produit'], name='core_invent_produit_ca53c7_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaireproduit',
            index=models.Index(fields=['inventaire', 'produit'], name='core_invent_inventa_2dda29_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaireproduit',
            index=models.Index(fields=['est_compte'], name='core_invent_est_com_0bcc96_idx'),
        ),
        migrations.AddIndex(
            model_name='inventaireproduit',
            index=models.Index(fields=['inventaire', 'est_compte'], name='core_invent_inventa_ab3b3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventaireproduit',
            unique_together={('inventaire', 'produit')},
        ),
    ]
